version: '3'
services:
  app:
    container_name: booking-app
    build:
      context: .
      dockerfile: ./Dockerfile
    command: sh start.sh
    restart: always
    env_file:
       - ".env"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - 127.0.0.1:${SERVICE_PORT}:8765
    links:
      - postgres
    depends_on:
      - postgres

  postgres:
    image: postgres:15.1
    container_name: postgres-booking
    hostname: postgres
    env_file:
      - ".env"
    ports:
      - 127.0.0.1:${DATABASE_PORT}:5432/tcp
    environment:
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
    volumes:
      - "./service/postgresql:/var/lib/postgresql/data"
    restart: unless-stopped

  minio:
    container_name: "minio"
    hostname: minio
    image: minio/minio:latest
    env_file:
      - ".env"
    ports:
      - ${MINIO_END_POINT_UI}:9090
      - ${MINIO_END_POINT}:9000
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - "./data_store/minio:/data"
    restart: unless-stopped
    command: minio server /data --console-address ":9090"

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/avatars;
      /usr/bin/mc policy set public myminio/avatars;
      exit 0;
      "